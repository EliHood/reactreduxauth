{"version":3,"sources":["firebaseConfig.js","components/SignUp.js","actions/index.js","components/SignIn.js","components/Post.js","components/Dashboard.js","components/Navbar.js","App.js","serviceWorker.js","reducers/auths.js","reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","database","ref","auth","fire","GoogleAuthProvider","SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","formData","state","setState","objectSpread","defineProperty","target","name","value","email","password","username","errors","bind","assertThisInitialized","handleSubmit","preventDefault","creds","signUp","_this$props","authError","userId","react_default","a","createElement","Redirect","to","className","onSubmit","TextField_default","id","label","style","width","type","margin","variant","onChange","Component","withRouter","connect","user","auths","dispatch","firebaseAuth","createUserWithEmailAndPassword","trim","then","resp","collection","doc","uid","set","response","history","push","catch","err","SignIn","e","console","log","signIn","signInWithEmailAndPassword","Post","post","description","createPost","_this2","get","snapshot","forEach","data","multiline","rows","defaultValue","getState","profile","add","createdAt","Date","styles","card","minWidth","p","letterSpacing","fontSize","fontStyle","h","Dashboard","_isMounted","loading","posts","getPosts","prevProps","prevMyPosts","myPosts","arr1","arr2","length","i","equalArrays","_this$state","toLowerCase","map","key","Card_default","CardContent_default","Typography_default","component","moment","toDate","calendar","item","_getPosts","createBrowserHistory","forceRefresh","isAuthenticated","signOut","BrowserRouter","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","onClick","Route","path","App","CurrentUser","components_Navbar","onAuthStateChanged","payload","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","arguments","undefined","action","message","firebaseReducer","firestoreReducer","createStoreWithMiddleware","applyMiddleware","thunk","createStore","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bbc3bc3.chunk.js","sourcesContent":["\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\n const config = {\n    apiKey: \"AIzaSyD_4JF1ZAf29gSq6wc3iKa7xBkg0PFOhkw\",\n    authDomain: \"eli-app3.firebaseapp.com\",\n    databaseURL: \"https://eli-app3.firebaseio.com\",\n    projectId: \"eli-app3\",\n    storageBucket: \"\",\n    messagingSenderId: \"324828100842\"\n};\n\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport const ref = firebase.database().ref()\nexport const auth = firebase.auth()\nexport const database = firebase.database()\nexport const fire = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\n\nexport default firebase;","import React, {Component} from 'react';\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {signUp} from '../actions/';\nimport '../App.css';\nimport PropTypes, { func, bool} from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            formData: { // set up default form values\n                email: \"\",\n                password: \"\",\n                username:\"\"\n            },\n            errors: {}\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (event) => {\n        const {formData} = this.state;\n\n        this.setState({\n            formData: {\n                ...formData, // leave other values unchanged\n                [event.target.name]: event.target.value, // update the changed value\n            }\n        });\n    }\n\n    // ...\n    handleSubmit(event) {\n        event.preventDefault();\n        const {formData}=this.state;\n        let  {email, password,username} = formData;\n        let creds = {\n            email,\n            password,\n            username\n        }\n        // console.log(creds);\n       this.props.signUp(creds);\n   \n    }\n\n    render() {\n        const {authError, userId} = this.props\n        if (userId) return <Redirect to='/dashboard' />\n        return (\n            \n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h1>Sign Up</h1>\n                        <div className=\"center red-text\">\n                            {authError\n                                ? <p>\n                                        {authError}\n                                    </p>\n                                : null}\n                        </div>\n                        <form onSubmit={this.handleSubmit}>\n\n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Enter Username\"\n                                style={{width: 400}}\n                                type=\"name\"\n                                name=\"username\"\n                                value={this.state.formData.username}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange} \n                            />\n                           <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Enter Email\"\n                                style={{width: 400}}\n                                type=\"name\"\n                                name=\"email\"\n                                value={this.state.formData.email}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange} \n                               />\n                      \n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Enter Password\"\n                                style={{width: 400}}\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.formData.password}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange} \n                            />\n                               <br></br>\n                               <br></br>\n                           <button className=\"btn btn-outline-primary myForm\">Submit</button>                          \n                        </form>\n                    </div>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.firebase.auth,\n  authError: state.auths.authError,\n  userId: state.auths.userId\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUp: (user) => dispatch(signUp(user))\n\n});\n\nSignUp.propTypes = {\n    signUp: PropTypes.func,\n    userId: PropTypes.string,\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp));","import { auth as firebaseAuth } from '../firebaseConfig'\nimport {fire} from '../firebaseConfig'\nimport { history } from '../components/Navbar';\n\nexport const SET_USER = \"SET_USER\";\n\nexport const signUp = (user) => { return (dispatch) => {\n    firebaseAuth.createUserWithEmailAndPassword(user.email.trim(), user.password)\n     .then(resp => {\n            return fire.collection('users').doc(resp.user.uid).set({\n              username:user.username,\n              email: user.email,\n              password: user.password,\n              uid: resp.user.uid\n             \n            });\n          })\n        .then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n          })\n        .then((response) => {\n            history.push('/dashboard');\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err});\n        });\n\n \n    }\n    \n}\n\nexport const signIn = (user) => { return (dispatch) => {\n\n    firebaseAuth.signInWithEmailAndPassword(user.email, user.password)\n        .then(()=> {\n            dispatch({type: 'SIGNIN_SUCCESS'})\n        }).then((response) => {\n            history.push('/dashboard');\n        }).catch( (err) => {\n            dispatch({ type: 'SIGNIN_ERROR', err});\n        });\n    }\n   \n}\n\nexport const signOut = () => { return (dispatch) => {\n\n        firebaseAuth.signOut().then(() => {\n            dispatch({ type: 'LOGOUT_SUCCESS'})\n        })\n    }\n}\n\n\nexport const CurrentUser = () => dispatch => {\n    firebaseAuth.onAuthStateChanged((user) => {\n        if (user) {\n            dispatch({\n                type: SET_USER, \n                payload: user\n            })\n        }\n      });\n    \n}\n\nexport const createPost = (post) => {\n    return (dispatch, getState) => {\n        // async call to the database\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth;\n        fire.collection('posts').add({\n            description: post.description,\n            username: post.username,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_POST', post})\n        }).catch((err) => {\n            dispatch({type: 'CREATE_POST_ ERROR', err})\n        })\n    }\n}\n\n\nconst _getPosts = (posts) => ({\n    type: 'GET_POSTS',\n    posts\n})\n\nexport const getPosts = () => { return(dispatch) =>{\n    return fire.collection('posts').get().then(snapshot => {\n        const posts = [];\n\n        snapshot.forEach(item => {\n            posts.push(item.data());\n        });\n\n        // console.log(posts)\n\n        dispatch(_getPosts(posts));\n    })\n\n }\n}\n","import React, { Component } from 'react';\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {signIn} from  '../actions/';\nimport PropTypes, { func, bool} from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nclass SignIn extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            formData:{\n                email: '',\n                password: '',\n            },\n            errors:{}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange = e => {\n        console.log(e.target.name);\n        const { formData } = this.state\n        this.setState({\n          formData: {\n            ...formData,\n            [e.target.name]: e.target.value\n          }\n        });\n      };\n\n    handleSubmit = (e) => {\n        e.preventDefault();  \n        const {formData} = this.state;\n        const {email, password} = formData;\n\n        const creds = {\n            email,\n            password\n        }\n        \n        \n        const signin = this.props.signIn(creds);\n\n        if(signin){\n            console.log(creds);\n        }\n\n    }\n\n\n    render(){\n        const {authError,userId} = this.props\n        if (userId) return <Redirect to='/dashboard' />\n        return(\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <h1>Sign In</h1>\n\n                    <div className=\"center red-text\">\n                            {authError\n                                ? <p>\n                                        {authError}\n                                    </p>\n                                : null}\n                        </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Enter Email\"\n                            style={{width: 400}}\n                            type=\"name\"\n                            name=\"email\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange} \n                            />\n                    \n\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Enter Password\"\n                            style={{width: 400}}\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange} \n                        />\n                            <br></br>\n                            <br></br>\n                        <button className=\"btn btn-outline-primary myForm\">Submit</button>    \n                    </form>\n                </div>\n\n            </div>\n        </div>         \n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.firebase.auth,\n    authError: state.auths.authError,\n    userId: state.auths.userId\n})\n  \nconst mapDispatchToProps = (dispatch) => ({\n      signIn: (user) => dispatch(signIn(user))\n  \n});\n\n  SignIn.propTypes = {\n    signIn: PropTypes.func,\n    userId: PropTypes.string,\n  }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignIn));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter} from \"react-router-dom\";\nimport {fire} from '../firebaseConfig';\nimport TextField from '@material-ui/core/TextField';\nimport {createPost} from '../actions/';\n\nclass Post extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            description: '',\n            username: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillMount(){\n      \n        const collection = fire.collection('users');\n        collection.get().then(snapshot => {     \n            snapshot.forEach(doc => { \n                this.setState({\n                    username: doc.data().username,\n                })        \n            \n            });\n           \n        });\n       \n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n\n        this.setState({\n           [e.target.name]: e.target.value\n        })\n\n\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let description = this.state.description\n        let username = this.state.username\n        const post = {\n            description,\n            username\n        }\n        \n        this.props.createPost(post)\n        this.props.history.push('/dashboard')\n\n    }\n\n    render(){\n        const {userId} = this.props\n        if (!userId) return <Redirect to='/' />\n        return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 mt-4\">\n                    <form onSubmit={this.handleSubmit}>\n                        <h2>Create Post</h2>\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Enter Description\"\n                            multiline\n                            rows=\"4\"\n                            name=\"description\"\n                            style = {{width: 700}} \n                            defaultValue=\"\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange}\n                        \n                        />\n                        <br />\n                    \n                        <br></br>\n                    \n                        <button className=\"btn btn-outline-primary myForm\">Submit</button>   \n                     \n                    </form> \n                </div>\n\n\n            \n            </div>\n        </div>\n     \n\n        );\n    }\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    userId: state.auths.userId,\n    user: state.auths.user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    createPost: (post) => dispatch(createPost(post))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));","import React, {Component} from 'react';\nimport {fire} from '../firebaseConfig';\nimport { connect} from \"react-redux\";\nimport moment from 'moment';\nimport  '../index.css';\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport {getPosts} from '../actions'\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    margin:'40px 0px',\n\n  },\n  p:{\n      margin:'20px 0px',\n      letterSpacing: '2.7px',\n      fontSize:'0.8em',\n      fontStyle: 'italic'\n  },\n  h:{\n    letterSpacing: '5px' \n  }\n};\n\nconst equalArrays = (arr1, arr2) => {\n    if(arr1.length !== arr2.length)\n        return false;\n    for(var i = arr1.length; i--;) {\n        if(arr1[i] !== arr2[i])\n            return false;\n    }\n    return true;\n}\n\nclass Dashboard extends Component{\n\n    constructor(props){\n        super(props)\n        \n        this._isMounted = false;\n        this.state = {\n            username:\"\",\n            loading: true,\n            posts:[]\n        }\n\n    }\n  \n    componentDidMount(){\n        this._isMounted = true;\n        if(this.props.userId){\n            const collection = fire.collection('users');\n            collection.get().then(snapshot => {\n            if(!this._isMounted){return }\n              snapshot.forEach(doc => { \n                this.setState({\n                    username: doc.data().username,\n                    loading:false\n                })                 \n              });   \n            });\n  \n        }\n\n        this.props.getPosts();\n\n    }\n\n    componentWillMount(){\n        this._isMounted = false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevMyPosts = prevProps.myPosts;\n        const myPosts = this.props.myPosts;\n\n        if (!equalArrays(prevMyPosts, myPosts)) {\n            this.setState({ posts: myPosts })\n        }\n    }\n \n    render(){\n        if (!this.props.userId) return <Redirect to='/' />\n        const { loading, posts } = this.state;\n\n        if(loading){\n           return(\n            <div className=\"loader\"></div>\n           ) \n        }\n        return(\n            <div className=\"container\"> \n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-3\">\n                        <h1>Welcome {this.state.username.toLowerCase()}</h1>\n                  \n                        {posts.map((post, key)=> {\n                            return(\n                                 <Card key={key} style={styles.card}>\n                                        <CardContent>\n\n                                        <Typography variant=\"h4\" component=\"h2\" style={styles.h}>\n                                            {post.description}\n                                        </Typography>\n                                        <Typography component=\"p\" style={styles.p}>\n                                            by: {post.username}\n                                        </Typography>\n\n                                        <Typography component=\"p\">\n                                            by: {moment(post.createdAt.toDate()).calendar()}\n                                        </Typography>\n                                                                    \n                                    </CardContent>\n                                </Card>\n                            ); \n                        })} \n                    </div>\n                </div>\n            </div>\n          \n\n        );\n    }\n\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auths.user,\n    userId: state.auths.userId,\n    myPosts: state.auths.myPosts\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPosts: () => dispatch(getPosts())\n})\n\nexport default withRouter(connect(mapStateToProps,  mapDispatchToProps)(Dashboard));\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport Post from './Post';\nimport { connect } from 'react-redux'\nimport {signOut} from '../actions/';\nimport Dashboard from './Dashboard';\nimport PropTypes, { func, bool} from 'prop-types';\n\nexport const history = createBrowserHistory({forceRefresh:true});\n\nconst Navbar = (props) => {\n    return(\n        \n    <Router history={history}>\n        <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample08\" aria-controls=\"navbarsExample08\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n    \n          <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample08\">\n            <ul className=\"navbar-nav\">\n            {!props.isAuthenticated && ( \n                <li className=\"nav-item\">\n                    <Link  className=\"nav-link\" to=\"/\">Home </Link>\n                </li>  \n            )}\n             {props.isAuthenticated && (   \n                <li className=\"nav-item\">\n                    <Link  className=\"nav-link\" to=\"/dashboard\">Dashboard </Link>\n                </li>\n            )}\n\n                {!props.isAuthenticated && (\n                    <li className=\"nav-item\">\n                        <Link  className=\"nav-link\" to=\"/SignIn\">Sign-In</Link>\n                    </li>\n                    \n                )}\n                {!props.isAuthenticated && (        \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/SignUp\">Sign Up </Link>\n                    </li> \n                )}\n\n                 {props.isAuthenticated && (        \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/post\">Add-Post </Link>\n                    </li> \n                )}         \n                {props.isAuthenticated && (   \n                    <button className=\"btn btn-outline-primary btn-sm\" onClick={() => props.signOut()}>Log out</button>\n                )}\n     \n            </ul>\n          </div>\n        </nav>\n        <Route path=\"/SignUp\" component={SignUp} />\n        <Route path=\"/post\" component={Post} />\n        <Route path=\"/SignIn\" component={SignIn} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n       \n    </div>\n    </Router>\n    );\n\n}\n\nconst mapStateToProps = (state) => ({\n\n    isAuthenticated: state.auths.isAuthenticated\n\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    signOut: () => dispatch(signOut())\n\n});\n\nNavbar.propTypes = {\n    isAuthenticated:PropTypes.bool,\n    signOut:PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\n\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport { CurrentUser } from \"./actions\";\nimport { connect } from \"react-redux\";\nimport  './index.css';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            loading:true\n        }\n    }\n    componentWillMount() {\n        this.props.CurrentUser();\n\n        this.setState({\n            loading:false\n        })\n    }\n  render(){\n      const { loading} = this.state;\n\n      if(loading){\n          return(\n              <div className=\"loader\"></div>\n          )\n      }\n      return(\n          <Navbar />\n      )\n  }\n\n}\n\n\nexport default connect(null, { CurrentUser })(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_USER} from '../actions/';\nconst initialState = {\n    authError: null,\n    isAuthenticated: false,\n    userId: null,\n    user: {},\n    myPosts:[]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER:\n            return ({\n                ...state,\n                userId: action.payload.uid || null,\n                // user:action.payload,\n                isAuthenticated: true\n            })\n        case 'LOGOUT_SUCCESS':\n            console.log('signout success')\n            return ({\n                ...state,\n                userId: null,\n                isAuthenticated: false\n            })   \n        case 'GET_POSTS':\n            return ({\n                ...state,\n                myPosts: action.posts\n            })\n\n\n        case 'CREATE_POST': \n            console.log('created post', action.post)\n            return state;\n\n        case 'CREATE_POST_ERROR':\n            console.log('create post error', action.err)\n            return state;   \n\n        case 'SIGNUP_SUCCESS':      \n            return ({\n                ...state,\n                authError: null\n            })\n\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return ({\n                ...state,\n                authError: action.err.message\n            })\n\n        case 'SIGNIN_SUCCESS':\n            console.log('signin success')\n            return ({\n                ...state,\n                authError: null\n            })\n\n        case 'SIGNIN_ERROR':\n            console.log('signin error')\n            return ({\n                ...state,\n                authError: action.err.message\n            })\n        default:\n            return state\n    }\n}","import authReducer from './auths';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'\nimport {firebaseReducer } from 'react-redux-firebase';\n\n\nconst rootReducer = combineReducers({\n    auths: authReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(rootReducer)}>\n     <Router >\n      <App />\n      </Router>\n    </Provider>\n    \n    ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}